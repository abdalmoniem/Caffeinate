name: Publish Release on Tag
run-name: ${{ github.workflow }} ${{ github.ref_name }}

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+'
      - 'v[0-9]+'

permissions: { }

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v4

      - name: Check base64
        run: base64 --version

      - name: Create local.properties
        run: |
          echo ${{ secrets.SIGNING_KEY }} | base64 -d > release_keystore.jks
          
          keystoreFile=$(realpath release_keystore.jks)
          
          echo "keystoreFile: $keystoreFile"

          echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" >> local.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> local.properties
          echo "keyAlias=release_key" >> local.properties
          echo "storeFile=$keystoreFile" >> local.properties

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2.1.3

      - name: Build APKs
        run: bash gradlew app:assembleRelease

      - name: Get Release APK Name
        run: |
          releaseApk=$(find app/build/outputs/apk/release/*.apk)
          echo $releaseApk
          echo ARTIFACT_NAME=$(basename $releaseApk) >> $GITHUB_ENV
          echo ARTIFACT_PATH=$releaseApk >> $GITHUB_ENV

      - name: Create Artifact ${{ env.ARTIFACT_NAME }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}
          if-no-files-found: error

      - name: Get Commit Message
        run: |
          echo "COMMIT_MESSAGE=$(git show -s --format=%B)"
          {
              echo 'COMMIT_MESSAGE<<EOF'
              git show -s --format=%B
              echo EOF
          } >> $GITHUB_ENV

      - name: Publish Release ${{ github.ref_name }}
        uses: svenstaro/upload-release-action@v2
        with:
          file: ${{ env.ARTIFACT_PATH }}
          tag: ${{ github.ref }}
          draft: false
          make_latest: true
          body: ${{ env.COMMIT_MESSAGE }}
          release_name: ${{ github.ref_name }}
          repo_token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
